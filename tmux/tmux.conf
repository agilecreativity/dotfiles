# tmux.conf
# http://manpages.ubuntu.com/manpages/precise/en/man1/tmux.1.html
# http://crunchbang.org/forums/viewtopic.php?id=20504
#
set -g default-command /bin/zsh
set -g default-shell   /bin/zsh

# Allow the new tmux session to use the updated variables (e.g. export SOME_ENV=..)
# see: http://stackoverflow.com/questions/8645053/how-do-i-start-tmux-with-my-current-environment
# - this option make it possible to write the script that use the environment variables
#   in different sessions. (e.g. t-courier, and t-claims-express etc)
set-option -ga update-environment ' BASE_PATH'

# Setting the delay between prefix and command
set -s escape-time 1

# Increase repeat time for repeatable commands
set -g repeat-time 1000

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Re-number windows when one is closed
set -g renumber-windows on

# Key Bindings #
# Ensure that we can send ctrl-a to other apps
bind C-a send-prefix
unbind C-b
set -g prefix C-a

# Splitting panes
bind \ split-window -h
bind - split-window -v

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Mouse support - set to on if you want to use the mouse
# Make it easy to scroll the result says in 'script/console' etc
setw -g mode-mouse on
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# Status bar {{{
set -g status-utf8 on
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right "#[fg=cyan]%d %b %R"

# Update the status bar every sixty seconds
set -g status-interval 60

# Center the window list
set -g status-justify centre

# Color status bar
set -g status-bg colour235
set -g status-fg white

# Highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

# Prevent application like vim or less clearing screen on exit
set-window-option -g alternate-screen off

# Set color of active pane
set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black
# }}}

# Enable vi keys.
setw -g mode-keys vi

# Copy mode
# Unbind original keys
unbind [
unbind p
unbind t

# Bind to the new keys
bind C-y copy-mode
bind p   paste-buffer

# Use Vim's key bindings
bind -t vi-copy H      start-of-line
bind -t vi-copy L      end-of-line
bind -t vi-copy v      begin-selection
bind -t vi-copy y      copy-selection
bind -t vi-copy C-v    rectangle-toggle
bind -t vi-copy Escape cancel

# Create 25% lower split
bind t split-window -p 25

# Maximize and restore a pane using 'Up' and 'Down
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

set -g history-limit 10000

# Allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Keep the window's name fixed in once set
set-option -g allow-rename off

# Color (Solarized dark) {{{
set-option -g status-bg black
set-option -g status-fg yellow
set-option -g status-attr default

# Default window title colors
set-window-option -g window-status-fg brightblue
set-window-option -g window-status-bg default

# Active window title colors
set-window-option -g window-status-current-fg brightred
set-window-option -g window-status-current-bg default

# Pane border
set-option -g pane-border-fg black
set-option -g pane-active-border-fg brightgreen

# Message text
set-option -g message-bg black
set-option -g message-fg brightred

# Pane number display
set-option -g display-panes-active-colour blue
set-option -g display-panes-colour brightred

# Clock
set-window-option -g clock-mode-colour green
# }}}

## Smart pane switching with awareness of vim splits {{{
# http://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# http://vimeo.com/vimlondon/videos
#
# Note: for this to work we need to setup the script 'tmux-vim-select-pane'
# which currently installed in ~/dotfiles/bin/tmux-vim-select-pane'

##----------------------------------------------------------------------------#
##!/usr/bin/env bash
## file: tmux-vim-select-pane
## See: https://gist.github.com/mislav/5189704
##      https://gist.github.com/mislav/5189704/raw/install.sh
## Like `tmux select-pane`, but if Vim is running in the current pane it sends
## a `<C-h/j/k/l>` keystroke to Vim instead.
#set -e
#
#cmd="$(tmux display -p '#{pane_current_command}')"
#cmd="$(basename "$cmd" | tr A-Z a-z)"
#
#if [ "${cmd%m}" = "vi" ]; then
#  direction="$(echo "${1#-}" | tr 'lLDUR' '\\hjkl')"
#  # forward the keystroke to Vim
#  tmux send-keys "C-$direction"
#else
#  tmux select-pane "$@"
#fi
##----------------------------------------------------------------------------#

# Smart pane switching with awareness of vim splits
bind -n C-k    run-shell 'tmux-vim-select-pane -U'
bind -n C-j    run-shell 'tmux-vim-select-pane -D'
bind -n C-h    run-shell 'tmux-vim-select-pane -L'
bind -n C-l    run-shell 'tmux-vim-select-pane -R'
bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
## }}}
